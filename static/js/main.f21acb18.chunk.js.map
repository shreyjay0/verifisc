{"version":3,"sources":["utils/Web3ConnectModal.tsx","components/Editables.tsx","assets/back1.webp","components/SuccessAddress.tsx","pages/User.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["PASS","checkCurrentChain","chainId","a","editables","SuccessAddress","props","Stack","sx","minHeight","Alert","className","severity","margin","animation","animationDelay","transitionDelay","Typography","address","balance","connectWallet","detectEthereumProvider","provider","window","ethereum","ACTIVITY","User","useState","Boolean","hasProvider","sethasProvider","username","setusername","accepted","showMsg","setshowMsg","settimeout","hasMsg","sethasMsg","type","code","msg","popMsg","setpopMsg","addressSigned","setaddressSigned","sign","setsignInfo","useRef","setprovider","userAddress","setuserAddress","bal","setbal","setconnection","setchainId","signature","account","setaccount","setchainError","displayActionMsg","pre","walletDisconnected","w3c","connect","undefined","web3","Web3","reqSign","err","JSON","stringify","console","log","eth","getChainId","cId","getAccounts","e18convert","Math","pow","personal","signed","Promise","all","then","val","getBalance","b","signUser","getProvider","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","network","onSubmitUsername","e","preventDefault","useEffect","useTheme","Card","display","flexDirection","maxWidth","borderRadius","textAlign","position","Box","CardContent","flex","component","variant","background","padding","color","fontWeight","minWidth","Paper","p","alignItems","IconButton","InputBase","ml","placeholder","inputProps","value","onChange","target","onKeyPress","key","Button","onClick","letterSpacing","fontSize","marginTop","pl","pb","CardMedia","width","image","Back1","alt","onClose","style","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f21acb18.chunk.js","sourcesContent":["import Web3Modal, { providers } from \"web3modal\";\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nconst PASS = \"this_is_a_secret_to_heaven_1001\";\r\n\r\nconst getBscOptions = () => {\r\n  const bscOptions = {\r\n    walletconnect: {\r\n      package: WalletConnectProvider,\r\n      options: {\r\n        rpc: {\r\n          56: \"https://bsc-dataseed.binance.org/\",\r\n        },\r\n        network: \"binance\",\r\n      },\r\n    },\r\n  };\r\n  return bscOptions;\r\n};\r\nconst checkCurrentChain = async (chainId: any) => {\r\n  if (chainId === 56) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nconst promiseRes = (val: any) => {\r\n  new Promise((resolve, reject) =>\r\n    val((error: any, result: any) => {\r\n      if (error) {\r\n        reject(error);\r\n      } else {\r\n        resolve(result);\r\n      }\r\n    })\r\n  );\r\n};\r\n\r\nexport { getBscOptions, checkCurrentChain, promiseRes, PASS };\r\n","export const editables = {\r\n  description:\r\n    \"Please enter your telegram username below and click proceed. This will ask you to sign the username from your wallet which will then be registered with us.\",\r\n  footerMsg:\r\n    \"On clicking proceed you will get a popup to sign the message via your desired provider\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/back1.fe0ec5d4.webp\";","import { Alert, Stack, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\ninterface addressType {\r\n  address: string;\r\n  balance: number;\r\n}\r\n\r\nfunction SuccessAddress(props: addressType) {\r\n  return (\r\n    <Stack sx={{ minHeight: \"60vh\" }}>\r\n      <Alert\r\n        className=\"msg-in-animation\"\r\n        severity=\"success\"\r\n        sx={{\r\n          margin: \"auto 20px\",\r\n          animation: \"ease-in\",\r\n          animationDelay: \"2s\",\r\n          transitionDelay: \"5s\",\r\n        }}\r\n      >\r\n        <Typography>\r\n          You have successfully signed with address:\r\n          {props.address}\r\n          <br />\r\n          <br />\r\n          BNB balance: {props.balance}\r\n        </Typography>\r\n      </Alert>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default SuccessAddress;\r\n","/*eslint-disable*/\r\nimport React, {\r\n  Dispatch,\r\n  SetStateAction,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertColor from \"@mui/material/Alert\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  getBscOptions,\r\n  checkCurrentChain,\r\n  promiseRes,\r\n  PASS,\r\n} from \"../utils/Web3ConnectModal\";\r\nimport {\r\n  InputHandler,\r\n  ButtonEventHandler,\r\n  msgBoxColor,\r\n  KeyboardInputHandler,\r\n} from \"../types/types\";\r\nimport { prettyDOM } from \"@testing-library/dom\";\r\nimport { editables } from \"../components/Editables\";\r\nimport Back1 from \"../assets/back1.webp\";\r\nimport SuccessAddress from \"../components/SuccessAddress\";\r\nimport Web3Modal, { providers } from \"web3modal\";\r\nimport Web3 from \"web3\";\r\nimport { config } from \"../config\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { walletconnect } from \"web3modal/dist/providers/connectors\";\r\nimport { convertToObject } from \"typescript\";\r\nconst bscOptions = {\r\n  chainId: 56,\r\n  urlRpc: \"https://bsc-dataseed.binance.org/\",\r\n};\r\n\r\nconst connectWallet = async () => {\r\n  const provider = await detectEthereumProvider();\r\n\r\n  return window.ethereum == provider;\r\n};\r\n\r\nconst ACTIVITY = {\r\n  CONNECT: \"wallet connection\",\r\n  SIGN: \"message signature\",\r\n  IDLE: \"\",\r\n};\r\n\r\ntype setUserType = {\r\n  onClick?: ButtonEventHandler;\r\n};\r\n\r\nfunction User(props: setUserType) {\r\n  let pVal: boolean = false;\r\n  const [connected, setconnected]: [\r\n    boolean,\r\n    Dispatch<SetStateAction<boolean>>\r\n  ] = useState(Boolean(false));\r\n  const [hasProvider, sethasProvider] = useState<boolean>(pVal);\r\n  const [username, setusername] = useState(\"\");\r\n  const [accepted, setaccepted] = useState(null);\r\n  const [activity, setactivity] = useState(ACTIVITY.IDLE);\r\n  const [showMsg, setshowMsg] = useState(false);\r\n  const [timeout, settimeout] = useState(8);\r\n  const [hasMsg, sethasMsg] = useState(false);\r\n  const [popMsg, setpopMsg] = useState({\r\n    type: \"\",\r\n    code: null,\r\n    msg: \"\",\r\n  });\r\n  const [addressSigned, setaddressSigned] = useState(false);\r\n  const [signInfo, setsignInfo] = useState({\r\n    address: \"\",\r\n    username: \"\",\r\n    sign: \"\",\r\n  });\r\n  const timeRef = useRef();\r\n  const [provider, setprovider] = useState<any>();\r\n  const [userAddress, setuserAddress] = useState(\"\");\r\n  const [bal, setbal] = useState(0);\r\n  const [connection, setconnection] = useState(false);\r\n  const [chainId, setchainId] = useState(1);\r\n  const [signature, setsignature] = useState(\"\");\r\n  const [account, setaccount] = useState<any>();\r\n  const [w3, setw3] = useState<any>();\r\n  const [chainError, setchainError] = useState(false);\r\n  const [signPromise, setsignPromise] = useState<any>();\r\n  const displayActionMsg = (msg: string, type: string) => {\r\n    setpopMsg((pre) => ({\r\n      ...pre,\r\n      msg: msg,\r\n      type: type,\r\n    }));\r\n    sethasMsg(true);\r\n  };\r\n\r\n  const walletDisconnected = () => {\r\n    setconnection(false);\r\n    setuserAddress(\"\");\r\n    setaccount([]);\r\n    setbal(0);\r\n    setchainId(1);\r\n  };\r\n  async function getProvider(w3c: any) {\r\n    try {\r\n      const provider = await w3c.connect();\r\n\r\n      if (provider != undefined) {\r\n        sethasProvider(true);\r\n      }\r\n      await setprovider(w3c);\r\n      try {\r\n        const web3 = new Web3(provider);\r\n        reqSign(provider, web3);\r\n      } catch (err) {\r\n        walletDisconnected();\r\n        displayActionMsg(JSON.stringify(err), \"error\");\r\n        console.log(err);\r\n      }\r\n    } catch (err) {\r\n      displayActionMsg(JSON.stringify(err), \"info\");\r\n      walletDisconnected();\r\n      console.log(err);\r\n    }\r\n  }\r\n  async function reqSign(provider: any, web3: any) {\r\n    const cId = await web3.eth.getChainId();\r\n    await setchainId(cId);\r\n    if (await checkCurrentChain(cId)) {\r\n      const address = await web3.eth.getAccounts();\r\n      const e18convert = Math.pow(10, 18);\r\n      const signed = await web3.eth.personal.sign(username, address[0], PASS);\r\n\r\n      const vall = await Promise.all([address, signed, account]).then((val) => {\r\n        return val;\r\n      });\r\n      // [setuserAddress(address[0]),setsignature(signed), setaccount(await address),setbal(b/e18convert)] = signPromise\r\n      setuserAddress(address[0]);\r\n      const b = await web3.eth.getBalance(address[0]);\r\n      setbal(b / e18convert);\r\n      setsignInfo({\r\n        address: userAddress,\r\n        username: username,\r\n        sign: signature,\r\n      });\r\n      setaddressSigned(true);\r\n      if (signature != \"\") {\r\n      }\r\n    } else {\r\n      setchainError(true);\r\n    }\r\n  }\r\n  const signUser = () => {\r\n    const web3Connect = new Web3Modal({\r\n      cacheProvider: false,\r\n      providerOptions: getBscOptions(),\r\n    });\r\n    getProvider(web3Connect);\r\n  };\r\n\r\n  const onSubmitUsername = (e: ButtonEventHandler): void => {\r\n    e.preventDefault();\r\n    if (username == \"\") {\r\n      setpopMsg((pre) => ({\r\n        ...pre,\r\n        msg: \"Username can't be left blank\",\r\n        type: \"error\",\r\n      }));\r\n      sethasMsg(true);\r\n    } else {\r\n      signUser();\r\n    }\r\n  };\r\n  const closePopMsg = (e: React.SyntheticEvent): void => {\r\n    e.preventDefault();\r\n    sethasMsg(false);\r\n    setpopMsg({\r\n      type: \"\",\r\n      code: null,\r\n      msg: \"\",\r\n    });\r\n    settimeout(8);\r\n  };\r\n  const onKeyPress = (e: any) => {\r\n    if (e.key === \"Enter\") {\r\n      onSubmitUsername(e);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setshowMsg(accepted != null);\r\n    const val = connectWallet();\r\n    sethasProvider(true);\r\n    if (hasProvider) {\r\n      console.log(\"ok\");\r\n    } else {\r\n      console.log(\"Please install metamask\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const theme = useTheme();\r\n  return (\r\n    <>\r\n      <Card\r\n        className=\"mui-card-outer\"\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"row-reverse\",\r\n          maxWidth: 600,\r\n          borderRadius: 2,\r\n          textAlign: \"left\",\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        {addressSigned ? (\r\n          <SuccessAddress address={userAddress} balance={bal} />\r\n        ) : (\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <CardContent sx={{ flex: \"1 0 auto\" }}>\r\n              <Typography\r\n                component=\"div\"\r\n                variant=\"h5\"\r\n                sx={{\r\n                  background: \"#6c12d94d\",\r\n                  padding: 1,\r\n                  borderRadius: 1,\r\n                  color: \"#a32ab4\",\r\n                  fontWeight: 600,\r\n                }}\r\n              >\r\n                Member registration\r\n              </Typography>\r\n              <Typography\r\n                color=\"text.secondary\"\r\n                component=\"div\"\r\n                sx={{\r\n                  minWidth: 200,\r\n                  textAlign: \"left\",\r\n                  margin: \"17px 0\",\r\n                }}\r\n              >\r\n                {editables.description}\r\n              </Typography>\r\n              <Paper\r\n                component=\"form\"\r\n                sx={{\r\n                  p: \"2px 4px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  maxWidth: 300,\r\n                }}\r\n              >\r\n                <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n                  @\r\n                </IconButton>\r\n                <InputBase\r\n                  sx={{ ml: 1, flex: 1 }}\r\n                  placeholder=\"Enter telegram username\"\r\n                  inputProps={{ \"aria-label\": \"input-username\" }}\r\n                  value={username}\r\n                  onChange={(e) => {\r\n                    setusername(e.target.value);\r\n                  }}\r\n                  onKeyPress={onKeyPress}\r\n                />\r\n\r\n                {/* <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" /> */}\r\n              </Paper>\r\n              <Button\r\n                className=\"submit-username\"\r\n                variant=\"contained\"\r\n                onClick={onSubmitUsername}\r\n                sx={{ margin: \"20px 0 0 0\" }}\r\n              >\r\n                Proceed with signature\r\n              </Button>\r\n              <Box>\r\n                <Typography\r\n                  sx={{\r\n                    color: \"grey !important\",\r\n                    letterSpacing: \"0 !important\",\r\n                    fontWeight: 400,\r\n                    fontSize: \"0.75rem\",\r\n                    marginTop: 1,\r\n                  }}\r\n                >\r\n                  {editables.footerMsg}\r\n                </Typography>\r\n              </Box>\r\n            </CardContent>\r\n            <Box\r\n              sx={{ display: \"flex\", alignItems: \"center\", pl: 1, pb: 1 }}\r\n            ></Box>\r\n          </Box>\r\n        )}\r\n        <CardMedia\r\n          className=\"mui-img-show\"\r\n          component=\"img\"\r\n          sx={{ width: 151 }}\r\n          image={Back1}\r\n          alt=\"Intro Cover\"\r\n        />\r\n      </Card>\r\n      {hasMsg && (\r\n        <Alert\r\n          onClose={closePopMsg}\r\n          style={{ marginTop: \"38em\", position: \"absolute\" }}\r\n          {...(popMsg.type == \"error\"\r\n            ? { severity: \"error\" }\r\n            : popMsg.type == \"success\"\r\n            ? { severity: \"success\" }\r\n            : { severity: \"info\" })}\r\n        >\r\n          {popMsg.code == null ? popMsg.msg : popMsg.code + \": \" + popMsg.msg}\r\n        </Alert>\r\n      )}\r\n\r\n      {showMsg &&\r\n        (accepted ? (\r\n          <Alert severity=\"success\">Success</Alert>\r\n        ) : (\r\n          <Alert severity=\"error\">\r\n            Couldn't verify your signature. Retry after refreshing or check your\r\n            provider's setting if still not working{\" \"}\r\n          </Alert>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import \"./App.css\";\r\nimport User from \"./pages/User\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {false && <img src=\"\" className=\"App-logo\" alt=\"logo\" />}\r\n        <User />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}